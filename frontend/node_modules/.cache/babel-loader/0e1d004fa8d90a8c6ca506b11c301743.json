{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Projects\\\\my-wallet\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CircularProgress, Container } from '@mui/material';\nimport Home from './pages/Home';\nimport Auth from './pages/Auth';\nimport { Routes, Route, Navigate, BrowserRouter } from 'react-router-dom';\nimport { useAuth } from './hooks/auth.hook';\nimport { AuthContext } from \"./context/AuthContext\";\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    token,\n    login,\n    logout,\n    ready\n  } = useAuth();\n  const isAuthenticated = !!token;\n\n  if (!ready) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        login,\n        logout,\n        isAuthenticated,\n        ready\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: 'md',\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [isAuthenticated ? /*#__PURE__*/_jsxDEV(Route, {\n            path: '/',\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Route, {\n            path: '/auth',\n            element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 106\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: isAuthenticated ? '/' : '/auth',\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6qmudgfqL7i9bM7Zs3QRc2odRTA=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","CircularProgress","Container","Home","Auth","Routes","Route","Navigate","BrowserRouter","useAuth","AuthContext","LocalizationProvider","AdapterDateFns","App","token","login","logout","ready","isAuthenticated"],"sources":["C:/Users/Admin/Projects/my-wallet/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport {CircularProgress, Container} from '@mui/material';\nimport Home from './pages/Home';\nimport Auth from './pages/Auth';\nimport {Routes, Route, Navigate, BrowserRouter} from 'react-router-dom';\nimport {useAuth} from './hooks/auth.hook';\nimport {AuthContext} from \"./context/AuthContext\";\nimport {LocalizationProvider} from '@mui/x-date-pickers';\nimport {AdapterDateFns} from '@mui/x-date-pickers/AdapterDateFns';\n\nconst App = () => {\n  const {token, login, logout, ready} = useAuth();\n  const isAuthenticated = !!token;\n\n  if (!ready) {\n    return <CircularProgress />\n  }\n\n  return (\n    <BrowserRouter>\n      <AuthContext.Provider value={{\n        login, logout, isAuthenticated, ready\n      }}>\n        <Container maxWidth={'md'}>\n          <Routes>\n            {isAuthenticated ? (<Route path={'/'} element={<Home/>}/> ) : <Route path={'/auth'} element={<Auth/>}/>}\n            <Route path=\"*\" element={<Navigate to={isAuthenticated ? '/' : '/auth'} replace />} />\n          </Routes>\n        </Container>\n      </AuthContext.Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,SAA1B,QAA0C,eAA1C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,aAAjC,QAAqD,kBAArD;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAAQC,cAAR,QAA6B,oCAA7B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM;IAACC,KAAD;IAAQC,KAAR;IAAeC,MAAf;IAAuBC;EAAvB,IAAgCR,OAAO,EAA7C;EACA,MAAMS,eAAe,GAAG,CAAC,CAACJ,KAA1B;;EAEA,IAAI,CAACG,KAAL,EAAY;IACV,oBAAO,QAAC,gBAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,aAAD;IAAA,uBACE,QAAC,WAAD,CAAa,QAAb;MAAsB,KAAK,EAAE;QAC3BF,KAD2B;QACpBC,MADoB;QACZE,eADY;QACKD;MADL,CAA7B;MAAA,uBAGE,QAAC,SAAD;QAAW,QAAQ,EAAE,IAArB;QAAA,uBACE,QAAC,MAAD;UAAA,WACGC,eAAe,gBAAI,QAAC,KAAD;YAAO,IAAI,EAAE,GAAb;YAAkB,OAAO,eAAE,QAAC,IAAD;cAAA;cAAA;cAAA;YAAA;UAA3B;YAAA;YAAA;YAAA;UAAA,QAAJ,gBAA8C,QAAC,KAAD;YAAO,IAAI,EAAE,OAAb;YAAsB,OAAO,eAAE,QAAC,IAAD;cAAA;cAAA;cAAA;YAAA;UAA/B;YAAA;YAAA;YAAA;UAAA,QADhE,eAEE,QAAC,KAAD;YAAO,IAAI,EAAC,GAAZ;YAAgB,OAAO,eAAE,QAAC,QAAD;cAAU,EAAE,EAAEA,eAAe,GAAG,GAAH,GAAS,OAAtC;cAA+C,OAAO;YAAtD;cAAA;cAAA;cAAA;YAAA;UAAzB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IAHF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAtBD;;GAAML,G;UACkCJ,O;;;KADlCI,G;AAwBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}